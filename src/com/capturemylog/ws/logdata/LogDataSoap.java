
package com.capturemylog.ws.logdata;

import java.util.concurrent.Future;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.AsyncHandler;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.Response;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "LogDataSoap", targetNamespace = "http://tempuri.org/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface LogDataSoap {


    /**
     * 
     * @param data
     * @return
     *     returns javax.xml.ws.Response<com.log2cloud.ws.logdata.LogNewDataResponse>
     */
    @WebMethod(operationName = "LogNewData", action = "http://tempuri.org/LogNewData")
    @RequestWrapper(localName = "LogNewData", targetNamespace = "http://tempuri.org/", className = "com.log2cloud.ws.logdata.LogNewData")
    @ResponseWrapper(localName = "LogNewDataResponse", targetNamespace = "http://tempuri.org/", className = "com.log2cloud.ws.logdata.LogNewDataResponse")
    public Response<LogNewDataResponse> logNewDataAsync(
        @WebParam(name = "data", targetNamespace = "http://tempuri.org/")
        LogObject data);

    /**
     * 
     * @param data
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "LogNewData", action = "http://tempuri.org/LogNewData")
    @RequestWrapper(localName = "LogNewData", targetNamespace = "http://tempuri.org/", className = "com.log2cloud.ws.logdata.LogNewData")
    @ResponseWrapper(localName = "LogNewDataResponse", targetNamespace = "http://tempuri.org/", className = "com.log2cloud.ws.logdata.LogNewDataResponse")
    public Future<?> logNewDataAsync(
        @WebParam(name = "data", targetNamespace = "http://tempuri.org/")
        LogObject data,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<LogNewDataResponse> asyncHandler);

    /**
     * 
     * @param data
     */
    @WebMethod(operationName = "LogNewData", action = "http://tempuri.org/LogNewData")
    @RequestWrapper(localName = "LogNewData", targetNamespace = "http://tempuri.org/", className = "com.log2cloud.ws.logdata.LogNewData")
    @ResponseWrapper(localName = "LogNewDataResponse", targetNamespace = "http://tempuri.org/", className = "com.log2cloud.ws.logdata.LogNewDataResponse")
    public void logNewData(
        @WebParam(name = "data", targetNamespace = "http://tempuri.org/")
        LogObject data);

    /**
     * 
     * @param guidOwner
     * @return
     *     returns int
     */
    @WebMethod(operationName = "LogCount", action = "http://tempuri.org/LogCount")
    @WebResult(name = "LogCountResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "LogCount", targetNamespace = "http://tempuri.org/", className = "com.log2cloud.ws.logdata.LogCount")
    @ResponseWrapper(localName = "LogCountResponse", targetNamespace = "http://tempuri.org/", className = "com.log2cloud.ws.logdata.LogCountResponse")
    public int logCount(
        @WebParam(name = "guidOwner", targetNamespace = "http://tempuri.org/")
        String guidOwner);

}
