
package com.capturemylog.ws.logpicture;

import java.util.concurrent.Future;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.AsyncHandler;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.Response;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "LogPictureSoap", targetNamespace = "http://tempuri.org/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface LogPictureSoap {


    /**
     * 
     * @param content
     * @param guidOwner
     * @param guidLog
     * @return
     *     returns javax.xml.ws.Response<com.log2cloud.ws.logpicture.LogDataResponse>
     */
    @WebMethod(operationName = "LogData", action = "http://tempuri.org/LogData")
    @RequestWrapper(localName = "LogData", targetNamespace = "http://tempuri.org/", className = "com.log2cloud.ws.logpicture.LogData")
    @ResponseWrapper(localName = "LogDataResponse", targetNamespace = "http://tempuri.org/", className = "com.log2cloud.ws.logpicture.LogDataResponse")
    public Response<LogDataResponse> logDataAsync(
        @WebParam(name = "GuidLog", targetNamespace = "http://tempuri.org/")
        String guidLog,
        @WebParam(name = "GUIDOwner", targetNamespace = "http://tempuri.org/")
        String guidOwner,
        @WebParam(name = "Content", targetNamespace = "http://tempuri.org/")
        byte[] content);

    /**
     * 
     * @param content
     * @param guidOwner
     * @param asyncHandler
     * @param guidLog
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "LogData", action = "http://tempuri.org/LogData")
    @RequestWrapper(localName = "LogData", targetNamespace = "http://tempuri.org/", className = "com.log2cloud.ws.logpicture.LogData")
    @ResponseWrapper(localName = "LogDataResponse", targetNamespace = "http://tempuri.org/", className = "com.log2cloud.ws.logpicture.LogDataResponse")
    public Future<?> logDataAsync(
        @WebParam(name = "GuidLog", targetNamespace = "http://tempuri.org/")
        String guidLog,
        @WebParam(name = "GUIDOwner", targetNamespace = "http://tempuri.org/")
        String guidOwner,
        @WebParam(name = "Content", targetNamespace = "http://tempuri.org/")
        byte[] content,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<LogDataResponse> asyncHandler);

    /**
     * 
     * @param content
     * @param guidOwner
     * @param guidLog
     */
    @WebMethod(operationName = "LogData", action = "http://tempuri.org/LogData")
    @RequestWrapper(localName = "LogData", targetNamespace = "http://tempuri.org/", className = "com.log2cloud.ws.logpicture.LogData")
    @ResponseWrapper(localName = "LogDataResponse", targetNamespace = "http://tempuri.org/", className = "com.log2cloud.ws.logpicture.LogDataResponse")
    public void logData(
        @WebParam(name = "GuidLog", targetNamespace = "http://tempuri.org/")
        String guidLog,
        @WebParam(name = "GUIDOwner", targetNamespace = "http://tempuri.org/")
        String guidOwner,
        @WebParam(name = "Content", targetNamespace = "http://tempuri.org/")
        byte[] content);

}
